require 'fileutils'
require 'lib/handle_js_files'

# Compass generator for dynatree 
DYNATREE_13_SRC = File.join(GEM_ROOT, 'src', '1.3', 'dynatree.0.5.3')
DYNATREE_13_SRC_SKINS = File.join(DYNATREE_13_SRC, 'skins')

DYNATREE_13_DEST_TEMPLATES = File.join(GEM_ROOT, 'templates', 'dynatree-1.3')
DYNATREE_13_DEST_SKINS = File.join(DYNATREE_13_DEST_TEMPLATES, 'jquery.ui')
DYNATREE_13_DEST_IMAGES = File.join(DYNATREE_13_DEST_TEMPLATES, 'jquery.ui')

DYNATREE_13_MESSAGE1 = "# Generated by compass-jquery-plugin/gem-tasks/dynatree.rake\n# Install with: compass -f jquery -p dynatree\n\n"
DYNATREE_13_MESSAGE2 = "// Generated by compass-jquery-plugin/gem-tasks/dynatree.rake\n\n"

all_scripts = [
  'js/jquery.dynatree.js'
].collect {|filename| File.read(File.join(DYNATREE_13_SRC, filename))}.join "\n\n"

namespace :build do
  desc 'Build the stylesheets and templates for dynatree.'
  task :dynatree13 do    
    
    FileUtils.remove_dir DYNATREE_13_DEST_TEMPLATES if File.exists? DYNATREE_13_DEST_TEMPLATES 
    FileUtils.mkdir_p(File.join(DYNATREE_13_DEST_TEMPLATES, 'config', 'initializers'))
    
    open File.join(DYNATREE_13_DEST_TEMPLATES, 'manifest.rb'), 'w' do |manifest|
      manifest.print DYNATREE_13_MESSAGE1
      
      open File.join(DYNATREE_13_DEST_TEMPLATES, 'config', 'initializers', 'dynatree.rb'), 'w' do |f|
        f.print(File.read(File.join(DYNATREE_13_SRC, 'config', 'initializers', 'dynatree.rb')))
      end
      manifest.print "file 'config/initializers/dynatree.rb'\n"  
    
      open File.join(DYNATREE_13_DEST_TEMPLATES, 'jquery.dynatree.js'), 'w' do |f|
        f.print concat_files(all_scripts)
      end
      manifest.print "javascript 'jquery.dynatree.js'\n"
    
      open File.join(DYNATREE_13_DEST_TEMPLATES, 'jquery.dynatree.min.js'), 'w' do |f|
        f.print compress_js(all_scripts, "google")
      end
      manifest.print "javascript 'jquery.dynatree.min.js'\n"
    
      # jQuery DynaTreee Skins

      FileUtils.mkdir_p(File.join(DYNATREE_13_DEST_SKINS))
      
      Dir.foreach DYNATREE_13_SRC_SKINS do |skin|
        next if /^\./ =~ skin
  
        # Convert the stylesheet
      
        Dir.foreach File.join(DYNATREE_13_SRC_SKINS, "#{skin}") do |file|
          next unless /\.css$/ =~ file
          css = File.read File.join(DYNATREE_13_SRC_SKINS, "#{skin}", file)
          sass = ''
          IO.popen("css2sass", 'r+') { |f| f.print(css); f.close_write; sass = f.read }
          open File.join(DYNATREE_13_DEST_SKINS, "dynatree.#{skin}.sass"), 'w' do |f|
            f.write DYNATREE_13_MESSAGE2 + sass
          end
          manifest.print "stylesheet 'jquery.ui/dynatree.#{skin}.sass', :media => 'screen, projection'\n"
        end
  
        # Copy the skin images directory
        src_dir = File.join(DYNATREE_13_SRC_SKINS, skin, 'images')
        dest_dir = File.join(DYNATREE_13_DEST_IMAGES, "dynatree.#{skin}")
        FileUtils.mkdir_p dest_dir
        
        Dir.foreach(src_dir) do |image|
          next if /^\./ =~ image
          FileUtils.cp(File.join(src_dir, image), dest_dir)    
          manifest.print "image 'jquery.ui/dynatree.#{skin}/#{image}'\n"
        end
      end
    end
  end
end